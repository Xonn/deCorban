# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    path.avatar: /uploads/avatar
    path.model_thumbnails: /uploads/model_thumbnails
    path.galery_thumbnails: /uploads/galery_thumbnails
    path.galery_banner: /uploads/galery_banner
    path.attachments: /uploads/attachments
    path.big_slider: /uploads/big_slider
    stripe_public_key: '%env(resolve:STRIPE_ID)%'
    stripe_secret_key: '%env(resolve:STRIPE_SECRET)%'
    stripe_webhook_secret: '%env(resolve:STRIPE_WEBHOOK_SECRET)%'
    app.public_dir: '%kernel.project_dir%/public'
    app.image_cache_dir: '%kernel.project_dir%/var/storage'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $projectDir: '%kernel.project_dir%'
            $secret: '%kernel.secret%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    App\Api\StripeApi:
        arguments: ['%stripe_secret_key%']

    App\Event\StripeEventValueResolver:
        arguments: ['%stripe_webhook_secret%']
        tags:
            - { name: controller.argument_value_resolver, priority: 50 }
    
    League\Glide\Server:
        # call the static method
        factory: ['League\Glide\ServerFactory', create]
        arguments:
          - source: '%app.public_dir%'
            cache: '%app.image_cache_dir%'
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones